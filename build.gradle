apply plugin: 'java'
apply plugin: "jacoco"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = '4.0.3'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    flatDir { dirs 'lib' }
}

dependencies {
    compile ':sero-scheduler:1.+'
    compile ':sero-warp:1.+'
    compile 'org.apache.commons:commons-lang3:+'
    compile 'org.scream3r:jssc:2.8.0'
    compile 'org.slf4j:slf4j-api:+'
    
    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-core:+'
    testCompile 'org.slf4j:slf4j-simple:+'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task sourcesJar(group: 'build', type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task jacoco(group: 'verification', dependsOn: jacocoTestReport) {
}

test {
    testLogging {
        // Make sure output from standard out or error is shown in Gradle output.
        showStandardStreams = true
 
        // Or we use events method:
        // events 'standard_out', 'standard_error'
 
        // Or set property events:
        // events = ['standard_out', 'standard_error']
 
        // Instead of string values we can
        // use enum values:
        // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
        //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
    }
}